<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>Liquid</name></assembly>
<members>
<member name="T:Microsoft.Research.Liquid.LiquidInstaller">
 <summary>
 This allows us to be run as a service (install with InstallUtil.exe from .Net Framework)
 Start with: sc start "LiquidService"
 Stop  with: sc stop  "LiquidService"
 </summary>
</member>
<member name="M:Microsoft.Research.Liquid.App.Main(System.String[])">
 <summary>
 Main entry point for application (both interactive and service)
 </summary>
</member>
<member name="M:Microsoft.Research.Liquid.Montgomery.RunAdder(System.String,System.Int32,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
 <summary> Apply an integer adder to a register of qubits </summary>
 <param name="name">Name of the adder. Currently implemented are: Cuccaro, simple carry ripple, Takahashi</param>
 <param name="n">Input bit size</param> <param name="s1">n bit input (first addend)</param>
 <param name="s1">n+1 bit input (second addend). Gets overwritten</param>
 <param name="ctrl">a bit that (coherently) indicates whether to apply adder or not</param>
</member>
<member name="M:Microsoft.Research.Liquid.Montgomery.BuildTakahashiPlusOneAdder(Microsoft.FSharp.Collections.FSharpList{Microsoft.Research.Liquid.Qubit},Microsoft.FSharp.Collections.FSharpList{Microsoft.Research.Liquid.Qubit})">
<summary>
 The PlusOne adders specialize the Takahashi adder to add the constant 1, i.e. increment an integer by 1. 
 They were obtained by setting ys.[0] = 1 and ys.[i] = 0 for i in 1..(n-1), but still need qubits for the
 carry bits.
</summary>
</member>
<member name="M:Microsoft.Research.Liquid.Montgomery.BuildTakahashiAdder(Microsoft.FSharp.Collections.FSharpList{Microsoft.Research.Liquid.Qubit},Microsoft.FSharp.Collections.FSharpList{Microsoft.Research.Liquid.Qubit})">
<summary>
 Takahashi adder (inplace adder described e.g. in [Takahasi et al, arxiv:0910.2530])
</summary>
</member>
<member name="M:Microsoft.Research.Liquid.Montgomery.BuildRippleAdder(Microsoft.FSharp.Collections.FSharpList{Microsoft.Research.Liquid.Qubit},Microsoft.FSharp.Collections.FSharpList{Microsoft.Research.Liquid.Qubit},Microsoft.FSharp.Collections.FSharpList{Microsoft.Research.Liquid.Qubit},Microsoft.FSharp.Collections.FSharpList{Microsoft.Research.Liquid.Qubit})">
<summary>
 Simple ripple adder (adder described e.g. in [Draper, quant-ph/0008033])
</summary>
</member>
</members>
</doc>
