namespace Microsoft.Quantum.Canon {

    operation ApplyToSubregister(op : (Qubit[] => ()), idxs : Int[], target : Qubit[]) : () {
        Body {
            // FIXME: change to Slice<Qubit[]> once generics code gen.
            let subregister = QubitSlice(idxs, target)
            op(subregister)
        }
    }

    operation ApplyToSubregisterA(op : (Qubit[] => () : Adjoint), idxs : Int[], target : Qubit[]) : () {
        Body {
            ApplyToSubregister(op, idxs, target)
        }
        Adjoint {
            ApplyToSubregister(Adjoint op, idxs, target)
        }
    }

    operation ApplyToSubregisterC(op : (Qubit[] => () : Controlled), idxs : Int[], target : Qubit[]) : () {
        Body {
            ApplyToSubregister(op, idxs, target)
        }
        Controlled (controls) {
            let cop = (Controlled op)
            ApplyToSubregister(cop(controls, _), idxs, target)
        }
    }

    operation ApplyToSubregisterCA(op : (Qubit[] => () : Controlled, Adjoint), idxs : Int[], target : Qubit[]) : () {
        Body {
            ApplyToSubregister(op, idxs, target)
        }
        Adjoint {
            ApplyToSubregister(Adjoint op, idxs, target)
        }
        Controlled (controls) {
            let cop = (Controlled op)
            ApplyToSubregister(cop(controls, _), idxs, target)
        }
        Controlled Adjoint (controls) {
            let cop = (Controlled Adjoint op)
            ApplyToSubregister(cop(controls, _), idxs, target)
        }
    }

    function RestrictToSubregister(op : (Qubit[] => ()), idxs : Int[]) : (Qubit[] => ()) {
        return ApplyToSubregister(op, idxs, _)
    }
    function RestrictToSubregisterA(op : (Qubit[] => () : Adjoint), idxs : Int[]) : (Qubit[] => () : Adjoint) {
        return ApplyToSubregisterA(op, idxs, _)
    }
    function RestrictToSubregisterC(op : (Qubit[] => () : Controlled), idxs : Int[]) : (Qubit[] => () : Controlled) {
        return ApplyToSubregisterC(op, idxs, _)
    }
    function RestrictToSubregisterCA(op : (Qubit[] => () : Adjoint, Controlled), idxs : Int[]) : (Qubit[] => () : Adjoint, Controlled) {
        return ApplyToSubregisterCA(op, idxs, _)
    }

}