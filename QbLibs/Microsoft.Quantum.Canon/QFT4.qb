// namespace Microsoft.Research.Qflat.CliffordTRzMachine
// FIXME: uncomment when the namespace syntax is clarified

// open Microsoft.Quantum.Canon.Endianness
// FIXME: uncomment when the syntax to open modules is clarified

/// <summary>
/// Apply the Approximate Quantum Fourier Transform (AQFT) to a quantum register. 
/// </summary>
/// <param name = "a"> approximation parameter. </param>
/// <param name = "qs"> quantum register. </param>
/// <remarks> AQFT requires Z-rotation gates of the form 2π/2ᵏ and Hadamard gates. The 
/// input is assumed to be encoded in big endian.
/// The approximation parameter a determines the pruning level of the Z-rotations, i.e., 
/// a ∈ {0..n} and all Z-rotations 2π/2ᵏ where k>a are removed from the QFT circuit. It
/// is known that for k >= log₂(n)+log₂(1/ε)+3 one can bound ||QFT-AQFT||<ε. 
/// [ M. Roetteler, Th. Beth, Appl. Algebra Eng. Commun. Comput. 19(3): 177-193 (2008) ]
/// [ D. Coppersmith, https://arxiv.org/abs/quant-ph/0201067 ]
/// </remarks>

//operation () H (Qubit q){}
//operation () R1Frac (Int i, Int j, Qubit q){ Controlled auto }

operation Teleport (a: Int, qs : Qubit[]) : () {   
    Body {
        let n = Length(qs)
        for (i in 0..(n-1)) {
			for (j in 0..(i-1)) {
				if ((i-j) < a) {
					(Controlled R1Frac)( [qs[i]], (1, i - j, qs[j]) )
					H(qs[i])					
				}
			}
		}
    }
}

