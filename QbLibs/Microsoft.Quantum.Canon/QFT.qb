// namespace Microsoft.Research.Qflat.CliffordTRzMachine
// FIXME: uncomment when the namespace syntax is clarified

// open Microsoft.Quantum.Canon.Endianness
// FIXME: uncomment when the syntax to open modules is clarifiedn

/// <summary>
/// Apply the Approximate Quantum Fourier Transform (AQFT) to a quantum register. 
/// </summary>
/// <param name = "a"> approximation parameter. </param>
/// <param name = "qs"> quantum register. </param>
/// <remarks> AQFT requires Z-rotation gates of the form 2π/2ᵏ and Hadamard gates. The 
/// input is assumed to be encoded in big endian.
/// The approximation parameter a determines the pruning level of the Z-rotations, i.e., 
/// a ∈ {0..n} and all Z-rotations 2π/2ᵏ where k>a are removed from the QFT circuit. It
/// is known that for k >= log₂(n)+log₂(1/ε)+3 one can bound ||QFT-AQFT||<ε. 
/// [ M. Roetteler, Th. Beth, Appl. Algebra Eng. Commun. Comput. 19(3): 177-193 (2008) ]
/// [ D. Coppersmith, https://arxiv.org/abs/quant-ph/0201067 ]
/// </remarks>
operation ApproximateQFT ( a : Int, qs : BigEndian ) : ()
{
	Body {
		let n = Length(qs)
		if ( n == 0 ) { 
			fail "function register qs requires at least 1 qubit."
		}
		if ( a < 0 || a > n ) {
			fail "approximation parameter a must be in {0..n}"
		}
    	for (i in 0..n-1) {
    		for (j in 0..(i-1)) {
    			if ((i-j) < a ) {
					(Controlled R1Frac)([qs[i]], (1, i - j, qs[j]))
				}
			}
			H(qs[i])
		}

		// Apply the bit reversal permutation to the quantum register as
		// a side effect, such that we enforce the invariants specified
		// by the BigEndian UDT.
    	SwapReverseRegister(qs)
	}

	Adjoint auto
	Controlled auto
	Controlled Adjoint auto
}

/// <summary>
///     Performs the quantum Fourier transform on an quantum register
///     register containing an integer in the big-endian representation.
/// </summary>
/// <param name = "qs"> Quantum register on which to perform the QFT.</param>
/// <remarks>
///     QFT requires Z-rotation gates of the form 2π/2ᵏ and Hadamard gates.
/// </remarks>
operation QFT ( qs : BigEndian ) : ()
{
	Body {
		AQFT(length(qs), qs)
	}

	Adjoint auto
	Controlled auto
	Controlled Adjoint auto
}
