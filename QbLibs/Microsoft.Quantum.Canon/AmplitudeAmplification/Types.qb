//phasesStart, phasesTarget
newtype AmpAmpReflectionPhases : (Double[], Double[])
newtype AmpAmpRotationPhases: (Double[])


// This oracle O = I - (1 - e^(- i ϕ)) |ψ><ψ| performs a partial reflection by phase ϕ about a single pure state |ψ>.
// Note that when ϕ = π, O = I - 2 |ψ><ψ| is a reflection operator.
newtype OracleReflection : ((Double, Qubit[]) => (): Adjoint,Controlled)
//newtype OracleReflection : ((Double, Qubit[]) => ())

///This oracle O|s>_a|ψ>_s = λ |t>_a U |ψ>_s + ... acts on the ancilla state |s>_a to implement the unitary U on any system state |ψ>_s with amplitude λ in the |t>_a basis.
newtype OracleOblivious: ((Qubit[], Qubit[]) => (): Adjoint, Controlled)

///This oracle O|0>_f|0>_s = λ |1>_f |ψ>_s + ... acts on the on computational basis state |0>_f|0>_s to create the state |ψ>_s with amplitude λ in the basis flagged by |1>_f
newtype OracleState: ((Qubit, Qubit[]) => (): Adjoint, Controlled)

///This oracle O|0> = acts on the on computational basis state |0> to create the state |ψ>.
newtype OracleStateDeterministic: (Qubit[] => (): Adjoint, Controlled)